version: '3'

services:
  nginx:
    image: nginx:alpine
    container_name: nginx
    volumes:
      - ./docker/nginx/config/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 8080:80
    networks:
      - app-network
    depends_on:
      - backend
      - frontend
      - frontend-admin

  backend:
    build:
      context: .
      dockerfile: docker/php-fpm/Dockerfile
    image: exam-backend
    tty: true
    container_name: backend
    restart: always
    volumes:
      - ./site/backend:/project/backend
      - /project/backend/vendor
    depends_on:
      - db
    networks:
      - app-network

  frontend:
    build:
      context: .
      dockerfile: docker/node/frontend/Dockerfile
    tty: true
    image: exam-frontend
    container_name: frontend
    volumes:
      - ./site/frontend:/project/frontend
      - /project/frontend/node_modules
      - /project/frontend/dist
    networks:
      - app-network

  frontend-admin:
    build:
      context: .
      dockerfile: docker/node/frontend-admin/Dockerfile
    image: exam-frontend-admin
    tty: true
    container_name: frontend-admin
    volumes:
      - ./site/frontend-admin:/project/frontend-admin
      - /project/frontend-admin/node_modules
      - /project/frontend-admin/dist
    networks:
      - app-network

  db:
    image: mysql
    container_name: db
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: exam_db
    volumes:
      - database:/var/lib/mysql
    networks:
      - app-network

  db-adminer:
    image: adminer
    container_name: adminer
    restart: always
    ports:
      - 8081:8080
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  database:
    driver: local